<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Posts on My blog</title>
    <link>https://yangdwx.github.io/posts/</link>
    <description>Recent content in Posts on My blog</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>zh-Hans</language>
    <lastBuildDate>Tue, 23 Feb 2021 23:05:21 +0800</lastBuildDate><atom:link href="https://yangdwx.github.io/posts/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>JavaScript 数据类型</title>
      <link>https://yangdwx.github.io/posts/%E6%95%B0%E6%8D%AE%E7%B1%BB%E5%9E%8B/</link>
      <pubDate>Tue, 23 Feb 2021 23:05:21 +0800</pubDate>
      
      <guid>https://yangdwx.github.io/posts/%E6%95%B0%E6%8D%AE%E7%B1%BB%E5%9E%8B/</guid>
      <description>JavaScript 数据类型 数据类型   number
  整数和浮点数：JavaScript 内部的所有数字都是以 64 位浮点数形式储存，浮点数不是精确的值。
  科学记数法：
小数点前边的数字多于 21 位和小数点后的零多余 5 个，JavaScript 会自动将数值转为科学计数法表示，其他情况都采用字面形式直接表示。
  二进制：有前缀0b或者0B的数值：0b11。
  十六进制：有前缀0x或0X的数值。
  正零和负零：JavaScript 内部实际上存在2个0：一个是+0，一个是-0，区别就是64位浮点数表示法的符号位不同。它们是等价的。
  +0或-0当作分母返回的值是不相等的：+Infinity !== -Infinity
  NaN：NaN是 JavaScript 的特殊值，表示“非数字”（Not a Number），数据类型依然属于Number，NaN不等于任何值，包括它本身。
  Infinity：Infinity表示“无穷”，用来表示两种场景。一种是一个正的数值太大（大于等于2的1024次方），或一个负的数值太小（小于等于2的-1075），无法表示；另一种是非0数值除以0，得到Infinity。
Infinity大于一切数值（除了NaN），-Infinity小于一切数值（除了NaN）。
  parseInt()
  用于将字符串转为整数
字符串转为整数的时候，是一个个字符依次转换，如果遇到不能转为数字的字符，就不再进行下去，返回已经转好的部分。如果字符串的第一个字符不能转化为数字（后面跟着数字的正负号除外），返回NaN。如果字符串以0x或0X开头，parseInt会将其按照十六进制数解析。无法转换科学记数法表示的数字和自动会被JS转化为科学记数法的数字。
  进制转换
parseInt()方法还可以接受第二个参数（2到36之间，超出范围返回NaN ，如果第二个参数是0、undefined和null，则直接忽略。），表示被解析的值的进制，返回该值对应的十进制数。默认情况下，parseInt的第二个参数为10，即默认是十进制转十进制（ES5）。
如果字符串包含对于指定进制无意义的字符，则从最高位开始，只返回可以转换的数值。如果最高位无法转换，则直接返回NaN。
    parseFloat()
 parseFloat方法用于将一个字符串转为浮点数， 如果字符串符合科学计数法，则会进行相应的转换。 parseFloat会将空字符串、布尔值和Null转为NaN。    isNaN()</description>
    </item>
    
    <item>
      <title>JavaScript 历史</title>
      <link>https://yangdwx.github.io/posts/javascript-%E5%8E%86%E5%8F%B2/</link>
      <pubDate>Tue, 02 Feb 2021 18:12:37 +0800</pubDate>
      
      <guid>https://yangdwx.github.io/posts/javascript-%E5%8E%86%E5%8F%B2/</guid>
      <description>JavaScript 的诞生 1994年，网景公司（Netscape）发布了Navigator浏览器0.9版。这是历史上第一个比较成熟的网络浏览器，轰动一时。但是，这个版本的浏览器只能用来浏览，不具备与访问者互动的能力。因此，网景公司急需一种网页脚本语言，使得浏览器可以与网页互动。工程师Brendan Eich负责开发这种新语言。他觉得，没必要设计得很复杂，这种语言只要能够完成一些简单操作就够了，比如判断用户有没有填写表单。
仅仅一个月之后，1995年5月，网景公司做出决策，未来的网页脚本语言必须&amp;quot;看上去与Java足够相似&amp;quot;，但是比Java简单，使得非专业的网页作者也能很快上手。
但是，他对Java一点兴趣也没有。为了应付公司安排的任务，他只用10天时间就把Javascript设计出来了。
由于设计时间太短，语言的一些细节考虑得不够严谨，导致后来很长一段时间，Javascript写出来的程序混乱不堪。
JavaScript 的命名  Mocha 摩卡 =&amp;gt; LiveScript =&amp;gt; JavaScript。 Java 既是编程语言，也是一种咖啡。 浏览器时开始就同时支持 Java 和 JavaScript，后来 JS 在浏览器上胜出。  浏览器大战 微软的跟进  1996 年 8 月 IE 3 发布，支持 JScript（由微软实现的 JS 版本）。 浏览器大战开始，每家浏览器的脚本都不太一样。  网景的反击  1996 年 11 月，网景1996年11月，网景正式向ECMA（欧洲计算机制造商协会）提交语言标准。1997年6月，ECMA以JavaScript语言为基础制定了ECMAScript标准规范ECMA-262。JavaScript成为了ECMAScript最著名的实现之一。除此之外，ActionScript和JScript也都是ECMAScript规范的实现语言。尽管JavaScript作为给非程序人员的脚本语言，而非作为给程序人员的脚本语言来推广和宣传，但是JavaScript具有非常丰富的特性。  网景被收购  微软的 IE 浏览器由于捆绑近了Windows，很快占领市场。 1998 年，网景浏览器节节败退，公司陷入内忧外患，公司打算将浏览器开源（Firefox），但是并没有重新获得市场青睐，年底被美国在线 AOL 收购。 被收购后网景团队程序员纷纷被解雇，由布莱登在之后一直维护 Firefox 的运营。  如日中天的 IE 6  2001年，IE 6 随着 Windows XP 一起发布。 2004年，IE 6 全球市场份额达到 80%以上，然而这款浏览器却不兼容 W3C 标准（主要是 CSS）。 IE 6 也不断被爆出安全漏洞。 Firefox 也打算涅槃重生，重新打败 IE。 2005 年，IE 7 发布，打打不过 IE 6。 2006 年，主流浏览器为 IE 6 和 Firefox。 2010 年，中国的大部分浏览器还是 IE 6。  Chrome 横空出世  由于 IE 6 的巨大成功，微软觉得没有竞争对手，所以直接解散了 IE 6 的开发团队。 Firefox 的出现让微软重新组建 IE 团队，但是不是同一队人马，造成 IE7、8 问题不断。 2004 年，谷歌雇佣了一些 Firefox 和 IE 的开发者。 2008 年， Chrome 发布，迅速拿下 1%的市场份额。 2011 年，Chrome 份额超过 Firefox。 2016 年，Chrome 全球份额 62%。 2016 年，淘宝天猫宣布不再支持IE 6、IE 7，同年年底宣布不再支持 IE 8。 同时，移动市场的兴起，让前端摆脱 IE 十年的支配，从此，前端极速发展。  ECMAScript 标准的制定 时间  1997 年 6 月，第一版 ECMAScript 发布。 1999 年 12 月，第三版发布，这个版本使用最广。 第四版流产 2009 年 12 月，第五版发布，增加了部分功能。 2015 年 6 月，第六版发布，新浏览器都支持这一版。 之后每年发布一版，版本号以年份命名。  JavaScript 与 ECMAScript 的关系  ECMAScript 是纸上的标准，JavaScript 是浏览器的实现。 纸上标准往往落后于浏览器，先实现，再写进标准。  JavaScript 兴起  2004 年愚人节，谷歌发布 Gmail 在线网页，让用户和开发者眼前一亮，网页不是只能用来看新闻和图片。 2005 年，Jesse 将谷歌用到的技术命名为 AJAX，从此前端技术正式出现。 在此之后的网页开发都是由后端和设计师完成。 2006 年，jQuery 发布，大放异彩，是目前最长寿的 JS库，直到 IE 式微，jQuery 才稍微没那么火。  JavaScript 爆发</description>
    </item>
    
    <item>
      <title>HTTP</title>
      <link>https://yangdwx.github.io/posts/http/</link>
      <pubDate>Thu, 28 Jan 2021 13:46:01 +0800</pubDate>
      
      <guid>https://yangdwx.github.io/posts/http/</guid>
      <description>url 统一资源定位符（Uniform Resource Locator）  完整的URL包括协议+域名/IP+端口+路径+查询字符串+锚点。 通过 URL 可以确定一个「唯一的」地址（网址）。  Internet Protocal   主要约定了两件事：
 如何定位一台设备。 如何封装数据报文，跟其他设备交流。    IP 分为内网和外网，由路由器作为网关控制中转。
  如何获取外网 IP
  当路由器连接上宽带运营商的服务器，那么路由器就会有一个外网 IP，比如「14.17.32.211」就是一个外网 IP，这个就是你在互联网中的地址。
  路由器没有固定的外网 IP，比如当你重启路由器，可能会被重新分配一个外网 IP
    内网 IP
 路由器会在家里穿件一个内网，内网中的设备使用内网 IP，一般来说内网 IP 格式都是 192.168.XXX.XXX。 一般路由器会给自己分配一个好记的内网 IP，比如 192.168.1.1 然后路由会给没一个内网中的设备分配一个不同的内网 IP，比如电脑是 192.168.1.2，第一台手机试 192.168.1.3，以此类推。    路由器的功能
  路由器有两个 IP，一个外网 IP 和一个内网 IP。
  内网中的设备可以相互访问，但是不能直接访问外网。</description>
    </item>
    
    <item>
      <title>CSS基础知识点</title>
      <link>https://yangdwx.github.io/posts/css%E7%AC%94%E8%AE%B0/</link>
      <pubDate>Thu, 14 Jan 2021 19:14:59 +0800</pubDate>
      
      <guid>https://yangdwx.github.io/posts/css%E7%AC%94%E8%AE%B0/</guid>
      <description>CSS基础知识点 文档流   流动方向
  inline 元素从左到右，到达最右边才会换行。
  block 元素从上到下，没一个元素都占独立的一行，新元素会另起一行。
  inline-block 元素从左到右，到达最右边才会换行，但不会强行拆分元素。
   新的 HTML5 里可以不分内联元素和块级元素，具体情况由默认样式决定，可以设定更改。
  inline-block 元素不会有外边距合并现象。
  非特定情况下永远不要写width: 100%。
       宽度
 inline 宽度为内部 inline 元素的和自适应，不能用 width 属性进行设置。 block 默认自动计算宽度，可以用 width 属性进行设置。 inline-block 结合前两者特点，可以设置宽度。    高度
 inline 高度由 line-height 间接决定，跟 height 无关。 block 高度由内部文档流元素决定，可以用 height 值进行设置。 inline-block 与 block 类似，可以设置高度。    overflow</description>
    </item>
    
    <item>
      <title>HTML笔记2</title>
      <link>https://yangdwx.github.io/posts/html%E7%AC%94%E8%AE%B02/</link>
      <pubDate>Mon, 11 Jan 2021 15:29:12 +0800</pubDate>
      
      <guid>https://yangdwx.github.io/posts/html%E7%AC%94%E8%AE%B02/</guid>
      <description>HTML 标签 &amp;lt;a&amp;gt;标签 &amp;lt;a&amp;gt;标签定义超链接，用于从一个页面链接到另一个页面
  href 属性
i. 网址
 &amp;lt;a href=&amp;quot;google.com&amp;gt;google&amp;lt;/a&amp;gt;&amp;quot; 相对路径，会在当前目录下查找 &amp;ldquo;google.com&amp;rdquo;。 &amp;lt;a href=&amp;quot;http://goolge.com&amp;quot;&amp;gt;google&amp;lt;/a&amp;gt; 跳转链接表明 HTTP 或 HTTPS 协议。 &amp;lt;a href=&amp;quot;/goolge.com&amp;quot;&amp;gt;google&amp;lt;/a&amp;gt; 浏览器根据当前协议，补全无协议链接。  ii. 锚点
 &amp;lt;a href=&amp;quot;#xxx&amp;quot;&amp;gt;google&amp;lt;/a&amp;gt; 跳转到 id=xxx 的页面位置。  iii. 路径
 /a/b/c 以及 a/b/c Index.html 以及./index.html  iiii. 伪协议
  &amp;lt;a href=&amp;quot;javascript: alert();&amp;quot;&amp;gt;google&amp;lt;/a&amp;gt; 伪协议，点击会直接执行js语句。
&amp;lt;a href=&amp;quot;javascript:;&amp;quot;&amp;gt;google&amp;lt;/a&amp;gt; 可以完美实现点击链接无事发生。
  &amp;lt;a href=&amp;quot;mailto:yangdwx@163.com&amp;quot;&amp;gt;email&amp;lt;/a&amp;gt;  点击发起邮件，一般拉起邮箱客户端。
  &amp;lt;a href=&amp;quot;tell:13xxxxxxxxx&amp;quot;&amp;gt;tell&amp;lt;/a&amp;gt; 点击拨打电话。
    target 属性</description>
    </item>
    
    <item>
      <title>HTML笔记1</title>
      <link>https://yangdwx.github.io/posts/html%E7%AC%94%E8%AE%B01/</link>
      <pubDate>Fri, 08 Jan 2021 23:01:13 +0800</pubDate>
      
      <guid>https://yangdwx.github.io/posts/html%E7%AC%94%E8%AE%B01/</guid>
      <description>HTML W3C 万维网联盟（World Wide Web Consortium W3C），又称 W3C 理事会，是万维网的主要国际标准组织。
Tim Berners-Lee ：万维网的发明人，目前是万维网联盟的主任，也是HTML 的发明者。
MDN Mozilla Developer Network（简称 MDN）
HTML 超文本标记语言（HyperText Markup Language）
 HTML 版本 （由 W3C 组织制定） DOCTYPE：用来选择文档类型。&amp;lt;!DOCTYPE html&amp;gt;（! + TAB） 常见标签  章节标签（语义结构）  标题：&amp;lt;h1&amp;gt;~&amp;lt;h6&amp;gt; 章节：&amp;lt;section&amp;gt; 文章：&amp;lt;article&amp;gt; 头部：&amp;lt;header&amp;gt; 脚部：&amp;lt;footer&amp;gt; 主要内容：&amp;lt;main&amp;gt; 旁支内容：&amp;lt;aside&amp;gt; 导航：&amp;lt;nav&amp;gt; 多级标题：&amp;lt;hgroup&amp;gt;   常用文本标签  段落：&amp;lt;p&amp;gt; 划分：&amp;lt;div&amp;gt; 行内：&amp;lt;span&amp;gt; 换行：&amp;lt;br&amp;gt; &amp;lt;wbr&amp;gt; 分隔线：&amp;lt;hr&amp;gt; 保留样式：&amp;lt;pre&amp;gt; 强调：&amp;lt;em&amp;gt; &amp;lt;strong&amp;gt; 上标：&amp;lt;sup&amp;gt; 下标：&amp;lt;sub&amp;gt; 代码 or 变量：&amp;lt;var&amp;gt; 删除线：&amp;lt;s&amp;gt; 引用：&amp;lt;blockquote&amp;gt; &amp;lt;q&amp;gt; 计算机代码（等宽显示）：&amp;lt;code&amp;gt; 按键（等宽显示）：&amp;lt;kbd&amp;gt; 计算机输出（等宽显示）：&amp;lt;samp&amp;gt; 行内标记文本（黄色高亮）：&amp;lt;mark&amp;gt; 注音：&amp;lt;ruby&amp;gt;   列表标签  有序列表：&amp;lt;ol&amp;gt; + &amp;lt;li&amp;gt; 无序列表：&amp;lt;ul&amp;gt; + &amp;lt;li&amp;gt; &amp;lt;dl&amp;gt; + &amp;lt;dt&amp;gt; + &amp;lt;dd&amp;gt;     全局属性（global attributes）是所有元素都可以使用的属性。  id 属性是元素在网页内的唯一标识符。  属性的值必须是全局唯一，同一页面不能有两个相通的id属性。 属性的值不得包含空格。 可以在属性值前面加上#作为锚点，定位该元素在网页的位置。   class属性同来对网页元素进行分类。 title属性用来为元素添加附加说明。大多数浏览器中，鼠标悬浮在元素上面时，会将title属性值作为浮动提示，显示出来。 tabindex属性用来使用 Tab 键，遍历网页元素。  tabindex 可以是正数，不必是连续的。 tabindex 可以是 0，表示最后才被 tab 访问。 tabindex 可以是 -1，表示不可被 tab 访问。   accesskey属性指定网页元素获得焦点的快捷键，该属性的值必须是单个的可打印字符。只要按下快捷键，该元素就会得到焦点。  Windows 和 Linux：Alt + 字符键 MAC：Ctrl + Alt + 字符键   style属性是标签的内联 CSS 样式。 hidden隐藏页面上的元素（优先级地域 CSS 可见性设置） contenteditable属性允许用户修改内容。    </description>
    </item>
    
    <item>
      <title>My First Blog</title>
      <link>https://yangdwx.github.io/posts/my-first-blog/</link>
      <pubDate>Fri, 08 Jan 2021 15:59:35 +0800</pubDate>
      
      <guid>https://yangdwx.github.io/posts/my-first-blog/</guid>
      <description>my first blog</description>
    </item>
    
  </channel>
</rss>
